---
- name: Verify
  hosts: molecule_platform
  tasks:
    - name: Read /root/.ssh/config
      slurp:
        src: /root/.ssh/config
      register: ssh_conf

    - name: Display /root/.ssh/config
      debug:
        msg: "{{ ssh_conf['content'] | b64decode }}"

- name: Verify icebergs_system = false
  hosts:
    - icebergs-off
  tasks:
    - name: Check presence of 9 hosts
      # 3 platforms + 1 fake mgmt + 4 fake hosts + wildcard
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host "), multiline=True) | length == 9
    - name: Check StrictHostKeyChecking = no for all (wildcard)
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host \*\n^ +StrictHostKeyChecking no$"), multiline=True) | length == 1

- name: Verify icebergs_system = true
  hosts:
    - icebergs-on
  tasks:
    - name: Check presence of management node only
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host icebergs-on"), multiline=True) |
                length == 1

- name: Verify hostkey_checking = true
  hosts:
    - hostkey_checking
  tasks:
    - name: Check presence of 9 hosts
      # 3 platforms + 1 fake mgmt + 4 fake hosts + wildcard
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host "), multiline=True) | length == 9
    - name: Check StrictHostKeyChecking not defined for all (wildcard)
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host \*\n^ +StrictHostKeyChecking"), multiline=True) |
                length == 0

- name: Verify StrictHostKeyChecking and UserKnownHostsFile
  hosts:
    - icebergs-off
    - hostkey_checking
  tasks:
    - name: Check StrictHostKeyChecking accept-new for fake-host1
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host fake-host1\n^ +StrictHostKeyChecking accept-new$"),
                multiline=True) | length == 1
    - name: Check StrictHostKeyChecking ask for fake-host2
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host fake-host2\n^ +StrictHostKeyChecking ask$"),
                multiline=True) | length == 1
    - name: Check UserKnownHostsFile /dev/null for fake-host3
      assert:
        that: ssh_conf['content'] | b64decode |
                regex_findall(("^Host fake-host3\n^ +UserKnownHostsFile /dev/null$"),
                multiline=True) | length == 1
